plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'org.sonarqube' version '3.0'
}

group = 'com.vambita.work'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

bootBuildImage {
	imageName = "vambita/${project.name}:${project.version}"
	cleanCache = true
}

springBoot {
	buildInfo()
}

jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/customJacocoReportDir")
}

sonarqube {
	properties {
		property 'sonar.projectName', 'Status Project'
	}
}

docker {
	dependsOn build
	name "vambita/${project.name}:${project.version}"
	dockerfile file('docker/Dockerfile')
	buildArgs([BUILD_VERSION: "${project.version}"])
	tags 'latest'
	noCache true
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
